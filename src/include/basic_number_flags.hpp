#ifndef BASIC_NUMBER_FLAGS_HPP
#define BASIC_NUMBER_FLAGS_HPP

#include <cstdint>

namespace type_builder{

using flag_t = uint64_t;

/**
 * @brief A collection of the available flags for basic_number.
 */
enum: flag_t{
	ENABLE_GENERAL_CONSTRUCTION = flag_t{1},
	ENABLE_DEFAULT_CONSTRUCTION = flag_t{1} << 1,
	ENABLE_LATE_ASSIGNEMENT = flag_t{1} << 2,
	ENABLE_SPECIFIC_EQUALITY_CHECK = flag_t{1} << 3,
	
	ENABLE_SPECIFIC_ORDERING_O_ = flag_t{1} << 4,
	ENABLE_EQUALITY_CHECK_O_ = flag_t{1} << 5,
	ENABLE_ORDERING_O_ = flag_t{1} << 6,
	
	ENABLE_INC_DEC = flag_t{1} << 7,
	
	ENABLE_SPECIFIC_PLUS_MINUS = flag_t{1} << 8,
	ENABLE_SPECIFIC_MULTIPLICATION = flag_t{1} << 9,
	ENABLE_SPECIFIC_DIVISION = flag_t{1} << 10,
	
	ENABLE_INTEGER_MULTIPLICATION = flag_t{1} << 11,
	ENABLE_INTEGER_DIVISION = flag_t{1} << 12,
	
	ENABLE_BASE_MULTIPLICATION_O_ = flag_t{1} << 13,
	ENABLE_BASE_DIVISION_O_ = flag_t{1} << 14,
	
	ENABLE_FLOAT_MULTIPLICATION_O_ = flag_t{1} << 15,
	ENABLE_FLOAT_DIVISION_O_ = flag_t{1} << 16,
	
	ENABLE_GENERAL_PLUS_MINUS = flag_t{1} << 20,
	ENABLE_GENERAL_MULTIPLICATION = flag_t{1} << 21,
	ENABLE_GENERAL_DIVISION = flag_t{1} << 22,
	
	ENABLE_SPECIFIC_MODULO = flag_t{1} << 26,
	ENABLE_MODULO_O_ = flag_t{1} << 27,
	
	ENABLE_NATIVE_TYPING = flag_t{1} << 30,
	
	DISABLE_CONSTRUCTION = flag_t{1} << 60,
	DISABLE_MUTABILITY = flag_t{1} << 61,
};

enum: flag_t{
	ENABLE_SPECIFIC_ORDERING = ENABLE_SPECIFIC_EQUALITY_CHECK | ENABLE_SPECIFIC_ORDERING_O_,
	ENABLE_EQUALITY_CHECK = ENABLE_SPECIFIC_EQUALITY_CHECK | ENABLE_EQUALITY_CHECK_O_,
	ENABLE_ORDERING = ENABLE_SPECIFIC_ORDERING | ENABLE_EQUALITY_CHECK | ENABLE_ORDERING_O_,
	
	ENABLE_BASE_MULTIPLICATION = ENABLE_INTEGER_MULTIPLICATION | ENABLE_BASE_MULTIPLICATION_O_,
	ENABLE_BASE_DIVISION = ENABLE_INTEGER_DIVISION | ENABLE_BASE_DIVISION_O_,
	
	ENABLE_FLOAT_MULTIPLICATION = ENABLE_INTEGER_MULTIPLICATION | ENABLE_FLOAT_MULTIPLICATION_O_,
	ENABLE_FLOAT_DIVISION = ENABLE_INTEGER_DIVISION |ENABLE_FLOAT_DIVISION_O_ ,
	
	ENABLE_INTEGER_MULT_DIV = ENABLE_INTEGER_MULTIPLICATION | ENABLE_INTEGER_DIVISION,
	ENABLE_BASE_MULT_DIV = ENABLE_BASE_MULTIPLICATION | ENABLE_BASE_DIVISION,
	ENABLE_FLOAT_MULT_DIV = ENABLE_FLOAT_MULTIPLICATION | ENABLE_FLOAT_DIVISION,
	
	ENABLE_GENERAL_MULT_DIV = ENABLE_GENERAL_MULTIPLICATION | ENABLE_GENERAL_DIVISION,
	
	ENABLE_MODULO = ENABLE_SPECIFIC_MODULO | ENABLE_MODULO_O_,
	
	
	DEFAULT_SETTINGS = ENABLE_SPECIFIC_ORDERING | ENABLE_INC_DEC
		| ENABLE_SPECIFIC_PLUS_MINUS
		| ENABLE_INTEGER_MULTIPLICATION | ENABLE_INTEGER_DIVISION,
	
	ENABLE_ALL_SPECIFIC_MATH = ENABLE_INC_DEC | ENABLE_SPECIFIC_PLUS_MINUS
		| ENABLE_SPECIFIC_MULTIPLICATION | ENABLE_SPECIFIC_DIVISION
		| ENABLE_SPECIFIC_MODULO,
	
	ENABLE_ALL_MATH = ENABLE_ALL_SPECIFIC_MATH | ENABLE_GENERAL_PLUS_MINUS 
		| ENABLE_GENERAL_MULTIPLICATION | ENABLE_GENERAL_DIVISION
		| ENABLE_FLOAT_MULT_DIV | ENABLE_MODULO,
	
	ENABLE_ALL = ENABLE_GENERAL_CONSTRUCTION | ENABLE_DEFAULT_CONSTRUCTION 
		| ENABLE_LATE_ASSIGNEMENT | ENABLE_ORDERING 
		| ENABLE_ALL_MATH | ENABLE_NATIVE_TYPING
};

} //namespace type_builder

#endif
